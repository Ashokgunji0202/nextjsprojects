generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(uuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  username      String     @unique @default(nanoid())
  image         String?
  role          String?
  accounts      Account[]
  sessions      Session[]
  Post          Post[]
  createdAt     DateTime   @default(now())
}

model VerificationRequest {
  id          String   @id @default(uuid())
  identifier  String
  token       String
  expires     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([identifier, token])
}

model Post {
  id        String     @id @default(uuid())
  title     String
  slug      String     @unique
  content   String
  thumbnail String?
  desc      String?
  keywords  String?
  excerpt   String?
  catSlug   String
  category  Category?  @relation(fields: [catSlug], references: [slug], onDelete: Cascade)
  createdAt DateTime   @default(now())
  authorId  String
  author    User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  status    PostStatus @default(DRAFT)
}

model Category {
  id    String  @id @default(uuid())
  title String
  slug  String  @unique
  posts Post[]
}

enum PostStatus {
  DRAFT
  PUBLISHED
  DELETED
  ARCHIVED
}
